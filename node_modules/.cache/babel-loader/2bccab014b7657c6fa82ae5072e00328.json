{"ast":null,"code":"import React from \"react\";\nimport { toast } from \"../utils/toast\";\n\nfunction useFormValidation(initialState, validate, action) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n\n      if (noErrors) {\n        action();\n        setValues(initialState);\n        setSubmitting(false);\n      } else {\n        toast(Object.values(errors).join(\" \"));\n        setSubmitting(false);\n      }\n    } // eslint-disable-next-line\n\n  }, [errors]);\n\n  function handleChange(event) {\n    setValues(previousValues => ({ ...previousValues,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleSubmit() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleChange,\n    values,\n    setValues,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;","map":{"version":3,"sources":["/Users/pedrotrigomiranda/Documents/github/product-hunt-solidsail-course/Hunt/src/hooks/useFormValidation.js"],"names":["React","toast","useFormValidation","initialState","validate","action","values","setValues","useState","errors","setErrors","isSubmitting","setSubmitting","useEffect","noErrors","Object","keys","length","join","handleChange","event","previousValues","target","name","value","handleSubmit","validationErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,SAASC,iBAAT,CAA2BC,YAA3B,EAAyCC,QAAzC,EAAmDC,MAAnD,EAA2D;AACzD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAeL,YAAf,CAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACG,YAAD,EAAeC,aAAf,IAAgCZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAtC;AAEAR,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAIF,YAAJ,EAAkB;AAChB,YAAMG,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,KAA+B,CAAhD;;AACA,UAAIH,QAAJ,EAAc;AACZT,QAAAA,MAAM;AACNE,QAAAA,SAAS,CAACJ,YAAD,CAAT;AACAS,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAJD,MAIO;AACLX,QAAAA,KAAK,CAACc,MAAM,CAACT,MAAP,CAAcG,MAAd,EAAsBS,IAAtB,CAA2B,GAA3B,CAAD,CAAL;AACAN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,KAXmB,CAYpB;;AACD,GAbD,EAaG,CAACH,MAAD,CAbH;;AAeA,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AAC3Bb,IAAAA,SAAS,CAAEc,cAAD,KAAqB,EAC7B,GAAGA,cAD0B;AAE7B,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAFL,KAArB,CAAD,CAAT;AAID;;AAED,WAASC,YAAT,GAAwB;AACtB,UAAMC,gBAAgB,GAAGtB,QAAQ,CAACE,MAAD,CAAjC;AACAI,IAAAA,SAAS,CAACgB,gBAAD,CAAT;AACAd,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,SAAO;AACLa,IAAAA,YADK;AAELN,IAAAA,YAFK;AAGLb,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLI,IAAAA;AALK,GAAP;AAOD;;AAED,eAAeT,iBAAf","sourcesContent":["import React from \"react\";\nimport { toast } from \"../utils/toast\";\n\nfunction useFormValidation(initialState, validate, action) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        action();\n        setValues(initialState);\n        setSubmitting(false);\n      } else {\n        toast(Object.values(errors).join(\" \"));\n        setSubmitting(false);\n      }\n    }\n    // eslint-disable-next-line\n  }, [errors]);\n\n  function handleChange(event) {\n    setValues((previousValues) => ({\n      ...previousValues,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function handleSubmit() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n  }\n\n  return {\n    handleSubmit,\n    handleChange,\n    values,\n    setValues,\n    isSubmitting,\n  };\n}\n\nexport default useFormValidation;\n"]},"metadata":{},"sourceType":"module"}